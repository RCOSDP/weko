name: Build

on: [push, pull_request]

env:
  IMAGE_TAG: ghcr.io/rcosdp/weko:${{ github.sha }}

jobs:
  prepare-image:
    runs-on: ubuntu-24.04
    outputs:
      image_tag: ${{ env.IMAGE_TAG }}
      image_exists: ${{ steps.check-image.outputs.exists }}
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image exists on GHCR
        id: check-image
        run: |
          if docker manifest inspect $IMAGE_TAG > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        if: steps.check-image.outputs.exists == 'false'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: steps.check-image.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build & push image (if not exists)
        if: steps.check-image.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build:
    needs: prepare-image
    runs-on: ubuntu-24.04
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull base image
        run: docker pull ${{ needs.prepare-image.outputs.image_tag }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Ensure docker compose v2
        run: |
          docker compose version || {
            DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
            mkdir -p $DOCKER_CONFIG/cli-plugins
            curl -SL https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 \
              -o $DOCKER_CONFIG/cli-plugins/docker-compose
            chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
            docker compose version
          }

      - name: Start containers
        run: docker compose up -d

      - name: Check container status
        run: docker compose ps

      - name: Show logs (for debug)
        run: docker compose logs

      - name: Stop and remove containers
        if: always()
        run: docker compose down
