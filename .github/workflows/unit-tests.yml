name: Unit Tests (Smart Image Build)

on: [push, pull_request]

env:
  IMAGE_TAG: ghcr.io/rcosdp/weko:${{ github.sha }}

jobs:
  prepare-image:
    runs-on: ubuntu-24.04
    outputs:
      image_tag: ${{ env.IMAGE_TAG }}
      image_exists: ${{ steps.check-image.outputs.exists }}
    steps:
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if image exists on GHCR
        id: check-image
        run: |
          if docker manifest inspect $IMAGE_TAG > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout
        if: steps.check-image.outputs.exists == 'false'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: steps.check-image.outputs.exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Build & push image (if not exists)
        if: steps.check-image.outputs.exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    needs: prepare-image
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      max-parallel: 8 # リソースに応じて調整
      matrix:
        module:
          - invenio-accounts
          - invenio-communities
          - invenio-db
          - invenio-deposit
          - invenio-files-rest
          - invenio-iiif
          - invenio-indexer
          - invenio-mail
          - invenio-oaiharvester
          - invenio-oaiserver
          - invenio-oauth2server
          - invenio-previewer
          - invenio-queues
          - invenio-records-rest
          - invenio-records
          - invenio-resourcesyncclient
          - invenio-resourcesyncserver
          - invenio-s3
          - invenio-stats
          - weko-accounts
          - weko-admin
          - weko-authors
          - weko-bulkupdate
          - weko-deposit
          - weko-gridlayout
          - weko-groups
          - weko-handle
          - weko-index-tree
          - weko-indextree-journal
          - weko-items-autofill
          - weko-items-ui
          - weko-itemtypes-ui
          - weko-logging
          - weko-plugins
          - weko-records-ui
          - weko-records
          - weko-redis
          - weko-schema-ui
          - weko-search-ui
          - weko-sitemap
          - weko-swordserver
          - weko-theme
          - weko-user-profiles
          - weko-workflow

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull base image
        run: docker pull ${{ needs.prepare-image.outputs.image_tag }}


      - name: Start container for ${{ matrix.module }}
        run: |
          docker compose -f docker-compose.yml up -d

      - name: Wait for web to be healthy
        run: |
          timeout 60 bash -c \
            'until [ "$$(docker inspect --format="{{.State.Health.Status}}" $(docker compose ps -q web))" == "healthy" ]; do sleep 2; done'

      - name: Install test dependencies
        run: |
          docker compose exec -T web bash -c "pip install --upgrade pip && pip install tox tox-setuptools-version pytest-timeout"

      - name: Run tox in ${{ matrix.module }}
        run: |
          docker compose exec -T web bash -c "cd modules/${{ matrix.module }} && tox"

      - name: Show logs if failed
        if: failure()
        run: docker compose logs

      - name: Stop containers
        if: always()
        run: docker compose down
