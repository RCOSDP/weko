from datetime import timedelta
from celery.schedules import crontab
from invenio_app.config import \
  APP_DEFAULT_SECURE_HEADERS as INVENIO_APP_APP_DEFAULT_SECURE_HEADERS

#Flask
TEMPLATES_AUTO_RELOAD = True

# Database
SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://{{ environ('INVENIO_POSTGRESQL_DBUSER') }}:{{ environ('INVENIO_POSTGRESQL_DBPASS') }}@{{ environ('INVENIO_POSTGRESQL_HOST') }}:5432/{{ environ('INVENIO_POSTGRESQL_DBNAME') }}'

# Statis files
COLLECT_STORAGE='flask_collect.storage.file'

# Redis
CACHE_TYPE='redis'
CACHE_REDIS_HOST='{{ environ('INVENIO_REDIS_HOST') }}'
CACHE_REDIS_URL='redis://{{ environ('INVENIO_REDIS_HOST') }}:6379/0'
ACCOUNTS_SESSION_REDIS_URL='redis://{{ environ('INVENIO_REDIS_HOST') }}:6379/1'

# Celery
BROKER_URL='amqp://guest:guest@{{ environ('INVENIO_RABBITMQ_HOST') }}:5672//'  # Celery 3
CELERY_BROKER_URL='amqp://guest:guest@{{ environ('INVENIO_RABBITMQ_HOST') }}:5672//'  # Celery 4
CELERY_RESULT_BACKEND='redis://{{ environ('INVENIO_REDIS_HOST') }}:6379/2'
#: Beat schedule
CELERY_BEAT_SCHEDULE = {
    # Stats
    'stats-process-events': {
        'task': 'invenio_stats.tasks.process_events',
        'schedule': timedelta(minutes=1),
        'args': [('celery-task', 'item-create', 'top-view', 'record-view', 'file-download', 'file-preview', 'search')],
    },
    'stats-aggregate-events': {
        'task': 'invenio_stats.tasks.aggregate_events',
        'schedule': timedelta(minutes=1),
        'args': [('celery-task-agg', 'file-download-agg', 'file-preview-agg', 'item-create-agg', 'record-view-agg', 'search-agg', 'top-view-agg')],
    },
    # WEKO-indextree-journal-export
    'indextree-journal-export-journal': {
        'task': 'weko_indextree_journal.tasks.export_journal_task',
        'schedule': timedelta(minutes=1),
        'args': [('p_path')],
    },
    'admin-send-report-emails': {
        'task': 'weko_admin.tasks.check_send_all_reports',
        'schedule': timedelta(days=1, minutes=0, hours=0),
        'args': [],
    },
    'harvest-check-schedules': {
        'task': 'invenio_oaiharvester.tasks.check_schedules_and_run',
        'schedule': crontab(hour=0, minute=0, day_of_week=1),
        'args': [],
    },
    'send-feedback-mail-schedules': {
        'task': 'weko_admin.tasks.send_feedback_mail',
        'schedule': crontab(day_of_month='1', hour=0, minute=0),
        'args': [],
    },
    'send_storage_alert_mail': {
        'task': 'invenio_files_rest.tasks.check_send_alert_mail',
        'schedule': timedelta(days=1, minutes=0, hours=0),
        'args': [],
    },
    'send_site_access_mail': {
        'task': 'weko_admin.tasks.check_send_site_access_report',
        'schedule': timedelta(days=1, minutes=0, hours=0),
        'args': [],
    },
    'remove_preview_pdf': {
        'task': 'invenio_files_rest.tasks.check_file_storage_time',
        'schedule': timedelta(days=0, minutes=0, hours=1),
        'args': [],
    },
}

# Elasticsearch
SEARCH_ELASTIC_HOSTS='{{ environ('INVENIO_ELASTICSEARCH_HOST') }}'
SEARCH_INDEX_PREFIX='{{ environ('SEARCH_INDEX_PREFIX') }}-'

# JSON Schema
JSONSCHEMAS_ENDPOINT='/schema'
JSONSCHEMAS_HOST='{{ environ('INVENIO_WEB_HOST') }}'

# OAI server
OAISERVER_REPOSITORY_NAME = 'WEKO'
OAISERVER_ADMIN_EMAILS = [
    'hoge@hoge.com',
]
OAISERVER_RECORD_INDEX='weko'
OAISERVER_ID_PREFIX='oai:{{ environ('INVENIO_WEB_INSTANCE') }}:recid/'

# Default Secure Headers
APP_DEFAULT_SECURE_HEADERS = INVENIO_APP_APP_DEFAULT_SECURE_HEADERS
# Disable Content Security Policy headers.
APP_DEFAULT_SECURE_HEADERS['content_security_policy'] = {}
APP_DEFAULT_SECURE_HEADERS['content_security_policy'] = {
  "default-src": "'self'",
  "script-src":"'self' 'unsafe-inline' 'unsafe-eval' *",
  "img-src": "'self' * data: blob:",
  "object-src": "'self' *",
  "style-src":"'self' 'unsafe-inline' 'unsafe-eval' *",
  "media-src": "'self' *",
  "child-src": "'self' *",
  "font-src": "'self' * data:"
}
APP_DEFAULT_SECURE_HEADERS['force_https'] = False
APP_DEFAULT_SECURE_HEADERS['session_cookie_secure'] = False

# I18N
BABEL_DEFAULT_LOCALE = 'en'
BABEL_DEFAULT_LANGUAGE = 'en'
I18N_LANGUAGES = [('ja', 'Japanese'), ('zh', 'Chinese'), ('id', 'Indonesian'), ('vi', 'Vietnamese'), ('ms', 'Malay'), ('fil', 'Filipino (Pilipinas)'), ('th', 'Thai'), ('hi', 'Hindi'), ('ar', 'Arabic')]
I18N_TRANSLATIONS_PATHS = [
'/code/invenio/translations/invenio_access/translations',
'/code/invenio/translations/invenio_accounts/translations',
'/code/invenio/translations/invenio_i18n/translations',
'/code/invenio/translations/invenio_pidstore/translations',
'/code/invenio/translations/invenio_records/translations',
'/code/invenio/translations/invenio_records_rest/translations',
'/code/invenio/translations/invenio_theme/translations'
]

# TODO: Remove me once the problem with email is solved in flask-security:
# https://github.com/mattupstate/flask-security/issues/685
SECURITY_EMAIL_SENDER = 'no-reply@localhost'

# For invenio-communities module
THEME_MATHJAX_CDN = '//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-AMS_HTML'

# Strage Setting for Amazone S3
FILES_REST_STORAGE_FACTORY = 'invenio_s3.s3fs_storage_factory'

# Location type list
FILES_REST_LOCATION_TYPE_LIST = [('s3', 'Amazon S3')]
